{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Gerenciamento de cartas de Pokemon",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SamuelOsuka/Loja-de-Cartas-Virtual/blob/main/Loja%20de%20Cartas%20Virtual\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NWEH9X5sjlGU"
      },
      "source": [
        "# Criação de um sistema de gerenciamento de cards Pokemon utilizando um banco de dados feito no SQLite Online, chamado \"cartas.db\". Nesse sistema de Gerenciamento, o usuário pode:\n",
        "\n",
        "\n",
        "*   Pesquisar todos os cards de Pokemon cadastrados\n",
        "*   Cadastrar mais Pokemons\n",
        "*   Buscar por Nome\n",
        "*   Buscar por Id\n",
        "*   Buscar por Serie\n",
        "*   Buscar por Coleção\n",
        "*   Buscar por Raridade\n",
        "*   Buscar por Quantidade\n",
        "*   Fazer Update dos Dados do Banco\n",
        "*   Apagar um Card do Banco\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fXIajrXTjVrw"
      },
      "source": [
        "Define a classe cartas e todos os atribulos necessários para criação de um novo cadastro de card Pokemon no Banco de Dados."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iOmKl8XmBVh6"
      },
      "source": [
        "class cartas():\n",
        "  #Construtor\n",
        "  def __init__(self, id, nome, imagem,  serie, colecao, raridade,quantidade):\n",
        "    self.id = id\n",
        "    self.nome = nome\n",
        "    self.imagem = imagem\n",
        "    self.serie = serie\n",
        "    self.colecao = colecao\n",
        "    self.raridade = raridade\n",
        "    self.quantidade = quantidade"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "D_GmIsCylTPz"
      },
      "source": [
        "Funções para requisição e alteração de dados do Banco."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CeFav3RPE9zh"
      },
      "source": [
        "class cartasDAO():\n",
        "  def buscarTodosOsPokemons():\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    cursor.execute('''SELECT * FROM Pokemon''')\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def cadastrarPokemon(cartas):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    cursor.execute('''INSERT INTO Pokemon VALUES (?,?,?,?,?,?,?);''',(cartas.id, cartas.nome, \\\n",
        "                                                                    cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "    conn.commit()\n",
        "    conn.close()\n",
        "  def buscarPorNome(nome):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    print(nome)\n",
        "    cursor.execute(''' SELECT * FROM Pokemon WHERE nome like \"{}\";'''.format(nome))\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def buscarPorID(id):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    print(id)\n",
        "    cursor.execute(''' SELECT * FROM Pokemon WHERE id like \"{}\";'''.format(id))\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def buscarPorRaridade(raridade):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    print(raridade)\n",
        "    cursor.execute(''' SELECT * FROM Pokemon WHERE raridade like \"{}\";'''.format(raridade))\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def buscarPorSerie(serie):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    print(serie)\n",
        "    cursor.execute(''' SELECT * FROM Pokemon WHERE serie like \"{}\";'''.format(serie))\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def buscarPorColecao(colecao):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    print(colecao)\n",
        "    cursor.execute(''' SELECT * FROM Pokemon WHERE colecao like \"{}\";'''.format(colecao))\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def buscarPorQuantidade(quantidade):\n",
        "    conn = sqlite3.connect('cartas.db')\n",
        "    cursor = conn.cursor()\n",
        "    print(quantidade)\n",
        "    cursor.execute(''' SELECT * FROM Pokemon WHERE quantidade like \"{}\";'''.format(quantidade))\n",
        "    pokemons = []\n",
        "    for linha in cursor.fetchall():\n",
        "      pokemons.append(Pokemon(linha[0], linha[1], linha[2], linha[3], linha[4], linha[5], linha[6]))\n",
        "    conn.close()\n",
        "    return pokemons\n",
        "  def UpdatePokemon(atr, id):\n",
        "    conn = sqlite3.connect(\"cartas.db\")\n",
        "    cursor = conn.cursor()\n",
        "    print(id)\n",
        "    print(atr)\n",
        "    cursor.execute(''' UPDATE Pokemon SET {} WHERE id like \"{}\";'''.format(atr, id))\n",
        "    conn.commit()   \n",
        "  def DeletarPokemon(id):\n",
        "    conn = sqlite3.connect(\"cartas.db\")\n",
        "    cursor = conn.cursor()\n",
        "    print(id)\n",
        "    cursor.execute(''' DELETE FROM Pokemon WHERE id = \"{}\";'''.format(id))\n",
        "    conn.commit()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1ETBb-CRljt8"
      },
      "source": [
        "Interface de usuário, onde pode escolher qual o comando quer atualizar ou visualizar sua tabela."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NYTqRKvTOyod"
      },
      "source": [
        "import sqlite3\n",
        "\n",
        "def menu():\n",
        "  print('1 - Mostrar todos os Pokemons')\n",
        "  print('2 - Cadastrar outro Pokemon')\n",
        "  print('3 - Busca por Nome')\n",
        "  print('4 - Buscar por Id')\n",
        "  print('5 - Buscar por Raridade')\n",
        "  print('6 - Buscar por Serie')\n",
        "  print('7 - Buscar por Colecao')\n",
        "  print('8 - Buscar por quantidade')\n",
        "  print('9 - Updade Pokemon')\n",
        "  print('10 - Deletar Pokemon')\n",
        "\n",
        "def mostrarListaDePokemons():\n",
        "  print('Lista de Pokemons:')\n",
        "  print('ID\\tNome\\tImagem\\tSerie\\tColecao\\tRaridade\\tQuantidade')\n",
        "  VarBusca = PokemonDAO.buscarTodosOsPokemons()\n",
        "  print(VarBusca)\n",
        "\n",
        "def cadastrarPokemon():\n",
        "  id = input('Id do Pokemon:')\n",
        "  nome = input('Nome do Pokemon:')\n",
        "  imagem = input('Imagem:')\n",
        "  serie = input('Serie:')\n",
        "  colecao = input('Colecao:')\n",
        "  raridade = input('Raridade:')\n",
        "  quantidade = int(input('Quantidade:'))\n",
        "  PokemonDAO.cadastrarPokemon(Pokemon(id, nome, imagem, serie, colecao, raridade, quantidade))\n",
        "\n",
        "def buscarPorID():\n",
        "  id = input(\"Id do Pokemon:\")\n",
        "  for cartas in PokemonDAO.buscarPorID(id):\n",
        "    print(\"{}\\t{}\\t{}\\t{}\\t{}\\t{}\\t{}\".format(cartas.id, cartas.nome,cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "\n",
        "def buscarPorNomePokemon():\n",
        "  nome = input(\"Nome do Pokemon:\")\n",
        "  for cartas in PokemonDAO.buscarPorNome(nome):\n",
        "    print(\"{}\\t{}\\t{}\\t{}\\t{}\\t{}\\t{}\".format(cartas.id, cartas.nome,cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "\n",
        "def buscarPorSeriePokemon():\n",
        "  serie = input(\"Serie:\")\n",
        "  for cartas in PokemonDAO.buscarPorSerie(serie):\n",
        "    print(\"{}\\t{}\\t{}\\t{}\\t{}\\t{}\\t{}\".format(cartas.id, cartas.nome,cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "    \n",
        "def buscarPorColecaoPokemon():\n",
        "  colecao = input(\"Colecao:\")\n",
        "  for cartas in PokemonDAO.buscarPorColecao(colecao):\n",
        "    print(\"{}\\t{}\\t{}\\t{}\\t{}\\t{}\\t{}\".format(cartas.id, cartas.nome,cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "\n",
        "def buscarPorRaridadePokemon():\n",
        "  raridade = input(\"Raridade:\")\n",
        "  for cartas in PokemonDAO.buscarPorRaridade(raridade):\n",
        "    print(\"{}\\t{}\\t{}\\t{}\\t{}\\t{}\\t{}\".format(cartas.id, cartas.nome,cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "def buscarPorQtdPokemon():\n",
        "  quantidade = int(input(\"Quantidade:\"))\n",
        "  for cartas in PokemonDAO.buscarPorQuantidade(quantidade):\n",
        "    print(\"{}\\t{}\\t{}\\t{}\\t{}\\t{}\\t{}\".format(cartas.id, cartas.nome,cartas.imagem, cartas.serie, cartas.colecao,\\\n",
        "                                                                   cartas.raridade, cartas.quantidade))\n",
        "    \n",
        "def Update():\n",
        "  atr = input(\"Atributo = \"\": \")\n",
        "  id = input(\"Id do Pokemon:\")\n",
        "  PokemonDAO.UpdatePokemon(atr, id)\n",
        "\n",
        "def Delete():\n",
        "  id = input(\"Id do Pokemon: \")\n",
        "  x = input(\"Deseja mesmo deletar? s/n\")\n",
        "  if x == \"s\":\n",
        "    PokemonDAO.DeletarPokemon(id)\n",
        "\n",
        "continuar = True\n",
        "\n",
        "while continuar:\n",
        "  print(\"Sistema de Gerenciamento de Pokemons\")\n",
        "  menu()\n",
        "  opcao = int(input(\"Opcao desejada:\"))\n",
        "  if opcao == 1:\n",
        "    mostrarListaDePokemons()\n",
        "  elif opcao == 2:\n",
        "    cadastrarPokemon()\n",
        "  elif opcao == 3:\n",
        "    buscarPorNomePokemon()\n",
        "  elif opcao == 4:\n",
        "    buscarPorID()\n",
        "  elif opcao == 5:\n",
        "    buscarPorRaridadePokemon()\n",
        "  elif opcao == 6:\n",
        "    buscarPorSeriePokemon()\n",
        "  elif opcao == 7:\n",
        "    buscarPorColecaoPokemon()\n",
        "  elif opcao == 8:\n",
        "    buscarPorQtdPokemon()\n",
        "  elif opcao == 9:\n",
        "    Update()\n",
        "  elif opcao == 10:\n",
        "    Delete()\n",
        "  continuar = input(\"Deseja continuar? s/n\")\n",
        "  if continuar == 'n':\n",
        "    break"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}